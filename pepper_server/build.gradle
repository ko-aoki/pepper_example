group = 'jp.co.ysk.pepper'
version = '0.0.1-SNAPSHOT'

description = "demo"

configurations {
    domaGenRuntime
}

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.BUILD-SNAPSHOT")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
    baseName = 'pepper_server'
    version =  '0.0.1-SNAPSHOT'
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    mavenCentral()
    maven {url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.3.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version:'1.3.1.RELEASE'
    compile group: 'org.seasar.doma.boot', name: 'doma-spring-boot-starter', version:'1.0.1'
    compile group: 'org.lazyluke', name: 'log4jdbc-remix', version:'0.2.7'
//    compile group: 'org.seasar.doma', name: 'doma-gen', version:'2.7.0-SNAPSHOT'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.3.1.RELEASE') {
        exclude(module: 'commons-logging')
    }
    testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version:'1.0.1.RELEASE'

    domaGenRuntime 'org.seasar.doma:doma-gen:2.6.2'
    domaGenRuntime 'mysql:mysql-connector-java:5.1.29'
}

task gen << {
    def rootPackageName  = 'jp.co.ysk'
    def daoPackagePath   = 'src/main/java/jp/co/ysk/dao'
    ant.taskdef(resource: 'domagentask.properties',
            classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: 'jdbc:mysql://192.168.56.101:3306/devdb', user: 'devMaria', password: 'devMaria') {
        entityConfig(packageName: "${rootPackageName}.entity", useListener: false)
        daoConfig(packageName: "${rootPackageName}.dao")
        sqlConfig()
    }
}

task genTestCases << {
    ant.taskdef(resource: 'domagentask.properties',
            classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: 'jdbc:mysql://192.168.56.101:3306/devdb', user: 'devMaria', password: 'devMaria') {
        sqlTestCaseConfig {
            fileset(dir: 'src/main/resources') {
                include(name: 'META-INF/**/*.sql')
            }
        }
    }
}